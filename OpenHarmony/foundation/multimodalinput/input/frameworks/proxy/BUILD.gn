# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../multimodalinput_mini.gni")

defines = input_default_defines

module_output_path = "multimodalinput/mmi_unit_out"

config("libmmi_client_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/util/common/include",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "event_handler/include",
    "events/include",
    "module_loader/include",
  ]
}

config("libmmi_public_client_config") {
  include_dirs = [
    "${mmi_path}/interfaces/native/innerkits",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/util/common/include",
  ]
}

config("libmmi_test_util") {
  include_dirs = [
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "${mmi_path}/frameworks/proxy/module_loader/include",
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/test/unittest/common/include",
    "${mmi_path}/util/network/include",
    "${mmi_path}/util/socket/include",
    "//third_party/googletest/googletest/include",
  ]
}

ohos_source_set("libmmi-common") {
  sources = libmmi_common_sources
  public_configs = [ ":libmmi_client_config" ]
  visibility = [ "${mmi_path}/*" ]
  stack_protector_ret = true
  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
  ]

  part_name = "input"
  subsystem_name = "multimodalinput"
}

ohos_shared_library("libmmi-client") {
  sources = libmmi_client_sources
  version_script = "${mmi_path}/interfaces/native/innerkits/libmmi-client-map"
  innerapi_tags = [ "platformsdk" ]
  stack_protector_ret = true

  if (input_feature_interceptor) {
    sources += [ "event_handler/src/input_interceptor_manager.cpp" ]
  }

  if (input_feature_monitor) {
    sources += [ "event_handler/src/input_monitor_manager.cpp" ]
  }

  if (input_feature_keyboard) {
    sources += [ "event_handler/src/key_event_input_subscribe_manager.cpp" ]
  }

  if (input_feature_switch) {
    sources += [ "event_handler/src/switch_event_input_subscribe_manager.cpp" ]
  }

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_client_config",
    "${mmi_path}/util:libmmi_util_public_config",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
  ]

  public_configs = [ ":libmmi_public_client_config" ]

  deps = [
    ":libmmi-common",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/service/filter:mmi_event_filter_service",
    "${mmi_path}/util:libmmi-util",
  ]

  part_name = "input"
  subsystem_name = "multimodalinput"
  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]
}

ohos_unittest("ut-mmi-proxy-out") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  sources = [ "module_loader/test/mmi_client_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

ohos_unittest("KeyEventTest") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/test/key_event_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/frameworks/proxy/events/test",
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "$root_out_dir/diff_libinput_mmi/export_include",
    "${mmi_path}/service/filter/include",
  ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/system_info.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/src/input_manager_util.cpp",
    "events/test/input_manager_simulate_test.cpp",
    "events/test/input_manager_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerManualTest") {
  module_out_path = module_output_path

  sources = [ "events/test/input_manager_manual_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

ohos_unittest("InputManagerFilterManualTest") {
  module_out_path = module_output_path

  sources = [ "events/test/input_manager_filter_manual_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

ohos_unittest("PointerEventTest") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/test/pointer_event_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerSimulateTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/frameworks/proxy/events/test",
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "$root_out_dir/diff_libinput_mmi/export_include",
    "${mmi_path}/service/filter/include",
  ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/system_info.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/src/input_manager_util.cpp",
    "events/test/input_manager_simulate_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}
