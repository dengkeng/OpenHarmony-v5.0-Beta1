# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/ace_platforms.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic/rosen_engine/render_service_base/Pipeline"

##############################  RSRenderServiceBasePipelineTest  ##################################
ohos_unittest("RSRenderServiceBasePipelineTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [
    "rs_base_render_node_test.cpp",
    "rs_canvas_drawing_render_node_test.cpp",
    "rs_canvas_render_node_test.cpp",
    "rs_context_test.cpp",
    "rs_dirty_region_manager_test.cpp",
    "rs_display_render_node_test.cpp",
    "rs_draw_cmd_list_test.cpp",
    "rs_draw_cmd_test.cpp",
    "rs_effect_render_node_test.cpp",
    "rs_occlusion_config_test.cpp",
    "rs_paint_filter_canvas_test.cpp",
    "rs_proxy_render_node_test.cpp",
    "rs_recording_canvas_test.cpp",
    "rs_render_content_test.cpp",
    "rs_render_display_sync_test.cpp",
    "rs_render_frame_rate_linker_map_test.cpp",
    "rs_render_frame_rate_linker_test.cpp",
    "rs_render_node_map_test.cpp",
    "rs_render_node_test.cpp",
    "rs_root_render_node_test.cpp",
    "rs_single_frame_composer_test.cpp",
    "rs_surface_handler_test.cpp",
    "rs_surface_render_node_test.cpp",
    "rs_task_dispatcher_test.cpp",
    "rs_uni_render_judgement_test.cpp",
    "sk_resource_manager_test.cpp",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$ace_root:ace_test_config",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/include",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
    "//foundation/graphic/graphic_2d/rosen/include",
    "//foundation/graphic/graphic_2d/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "../../../../../modules/render_service_base:render_service_base_src",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  deps += [ "//third_party/skia:skia_ohos" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]

  subsystem_name = "graphic"
}

###############################################################################
config("render_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":RSRenderServiceBasePipelineTest" ]
}
