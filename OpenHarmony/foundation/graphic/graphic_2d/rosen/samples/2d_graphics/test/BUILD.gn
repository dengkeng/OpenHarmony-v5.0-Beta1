# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

## Build drawing_sample {{{
config("drawing_sample_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]
}

ohos_executable("drawing_sample") {
  install_enable = true

  sources = [
    "drawing_sample.cpp",
    "include/shadow_test.h",
    "main.cpp",
    "src/bitmap_test.cpp",
    "src/camera_test.cpp",
    "src/filter_test.cpp",
    "src/image_test.cpp",
    "src/layer_context.cpp",
    "src/matrix_test.cpp",
    "src/path_effect_test.cpp",
    "src/path_test.cpp",
    "src/pen_test.cpp",
    "src/shader_test.cpp",
  ]

  configs = [ ":drawing_sample_config" ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/2d_graphics/include",
    "$graphic_2d_root/rosen/modules/2d_graphics/src",
    "$graphic_2d_root/rosen/samples/2d_graphics/test/include",
    "//foundation/multimedia/image_framework/interfaces/innerkits/include",
    "$graphic_2d_root/rosen/modules/composer/hdi_backend/include",
    "$graphic_2d_root/rosen/include/common",
    "$graphic_2d_root/rosen/modules/composer/vsync/include",
    "$graphic_2d_root/interfaces/inner_api/composer",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics",
    "$graphic_2d_root/rosen/modules/composer:libcomposer",
  ]

  deps += [ "//third_party/skia:skia_ohos" ]
  external_deps = [
    "eventhandler:libeventhandler",
    "graphic_surface:surface",
    "hilog:libhilog",
  ]

  part_name = "graphic_2d"
  subsystem_name = "graphic"
}
## Build drawing_sample }}}
