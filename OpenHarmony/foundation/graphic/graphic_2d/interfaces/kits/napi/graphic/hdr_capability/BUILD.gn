# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

config("hdr_capability_object_config") {
  visibility = [ ":*" ]

  include_dirs = [ "$graphic_2d_root/interfaces/kits/napi/graphic/hdr_capability/hdr_capability_utils" ]
}

ohos_shared_library("hdr_capability_utils") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [ "hdr_capability_utils/js_hdr_format_utils.cpp" ]

  configs = [ ":hdr_capability_object_config" ]

  external_deps = [
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  cflags_cc = [ "-std=c++17" ]

  part_name = "graphic_2d"
  subsystem_name = "graphic"
}

config("hdr_capability_napi_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "$graphic_2d_root/interfaces/kits/napi/graphic/hdr_capability/hdr_capability_utils",
    "$graphic_2d_root/interfaces/kits/napi/graphic/hdr_capability/hdr_capability_napi",
  ]
}

ohos_shared_library("hdrcapability_napi") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [
    "hdr_capability_napi/hdr_capability_module.cpp",
    "hdr_capability_napi/js_hdr_capability.cpp",
  ]

  configs = [ ":hdr_capability_napi_config" ]

  deps = [ "$graphic_2d_root/interfaces/kits/napi/graphic/hdr_capability:hdr_capability_utils" ]

  external_deps = [
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  cflags_cc = [ "-std=c++17" ]

  relative_install_dir = "module/graphics"
  part_name = "graphic_2d"
  subsystem_name = "graphic"
}
