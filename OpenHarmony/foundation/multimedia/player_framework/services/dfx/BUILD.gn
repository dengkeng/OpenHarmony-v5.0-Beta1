# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/player_framework/config.gni")

config("media_service_log_dfx_public_config") {
  cflags = [ "-DOHOS_MEDIA_LOG_DFX" ]
  include_dirs = [ "//foundation/multimedia/player_framework/services/dfx" ]
}

ohos_shared_library("media_service_log_dfx") {
  stack_protector_ret = true
  install_enable = true

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [ "dfx_log_dump.cpp" ]

  include_dirs = [ "." ]

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]

  subsystem_name = "multimedia"
  part_name = "player_framework"
}

ohos_shared_library("media_service_dfx") {
  stack_protector_ret = true
  install_enable = true

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [ "service_dump_manager.cpp" ]

  include_dirs = [
    ".",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
  ]

  defines = []
  defines += player_framework_defines

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "media_foundation:media_foundation",
  ]

  subsystem_name = "multimedia"
  part_name = "player_framework"
}
