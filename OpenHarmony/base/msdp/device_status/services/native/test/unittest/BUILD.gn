# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../device_status.gni")

module_output_path = "${device_status_part_name}/devicestatussrv"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "${device_status_root_path}/libs/interface",
    "${device_status_root_path}/interfaces/innerkits/interaction/include",
    "${device_status_service_path}/delegate_task/include",
    "${device_status_service_path}/communication/service/include",
    "${device_status_service_path}/interaction/drag/src/include",
    "${device_status_service_path}/device_manager/include",
    "${device_status_utils_path}/include",
  ]
}

ohos_unittest("test_devicestatus_service") {
  module_out_path = module_output_path

  sources = [ "src/devicestatus_service_test.cpp" ]

  configs = [
    "${device_status_utils_path}:devicestatus_utils_config",
    ":module_private_config",
  ]

  deps = [
    "${ability_runtime_path}/frameworks/native/appkit:appkit_native",
    "${device_status_frameworks_path}/js/napi:stationary",
    "${device_status_interfaces_path}/innerkits:devicestatus_client",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "cJSON:cjson",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("DeviceStatusAgentTest") {
  module_out_path = module_output_path
  include_dirs = [ "${device_status_interfaces_path}/innerkits/include" ]

  sources = [ "src/devicestatus_agent_test.cpp" ]

  configs = [
    "${device_status_utils_path}:devicestatus_utils_config",
    ":module_private_config",
  ]

  deps = [
    "../../../../frameworks/native/src:deviceagent",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("DragDataManagerTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  module_out_path = module_output_path
  include_dirs = [ "${device_status_interfaces_path}/innerkits/include" ]

  sources = [ "src/drag_data_manager_test.cpp" ]

  configs = [
    "${device_status_service_path}/interaction/drag:interaction_drag_public_config",
    ":module_private_config",
  ]

  deps = [
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_service_path}/interaction/drag:interaction_drag",
    "${device_status_utils_path}:devicestatus_util",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "graphic_2d:window_animation",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "window_manager:libdm",
  ]
}

ohos_unittest("CoordinationSMTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  module_out_path = module_output_path
  include_dirs = [
    "${device_status_interfaces_path}/innerkits/include",
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_root_path}/intention/services/device_manager/include",
  ]
  sources = [ "src/coordination_sm_test.cpp" ]

  configs = [
    "${device_status_service_path}/interaction/coordination:coordination_public_config",
    ":module_private_config",
  ]

  deps = [
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_service_path}/interaction/coordination:coordination",
    "${device_status_utils_path}:devicestatus_util",
    "//third_party/googletest:gtest_main",
    "//third_party/openssl:libcrypto_shared",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "cJSON:cjson",
    "device_manager:devicemanagersdk",
    "distributed_input:libdinput_sdk",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
  ]
}

ohos_unittest("CoordinationSoftbusAdapterTest") {
  module_out_path = module_output_path
  include_dirs = [ "${device_status_interfaces_path}/innerkits/include" ]

  sources = [ "src/coordination_softbus_adapter_test.cpp" ]

  configs = [
    "${device_status_service_path}/interaction/drag:interaction_drag_public_config",
    ":module_private_config",
  ]

  deps = [
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_service_path}/interaction/coordination:coordination",
    "${device_status_utils_path}:devicestatus_util",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "distributed_input:libdinput_sdk",
    "hilog:libhilog",
    "image_framework:image_native",
    "input:libmmi-client",
  ]
}

group("unittest") {
  testonly = true
  deps = []

  deps += [
    ":DeviceStatusAgentTest",
    ":DragDataManagerTest",
    ":test_devicestatus_service",
  ]

  if (fusion_intention_framework) {
    deps = []
  } else {
    if (fusion_interaction_coordination) {
      deps += [
        ":CoordinationSMTest",
        ":CoordinationSoftbusAdapterTest",
      ]
    }
  }
}
