# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../device_status.gni")

config("coordination_public_config") {
  include_dirs = [ "include" ]
}

ohos_shared_library("coordination") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  include_dirs = [
    "include",
    "${device_status_interfaces_path}/innerkits/interaction/include",
    "${device_status_service_path}/context/include",
    "${device_status_service_path}/interaction/coordination/include",
    "${device_status_service_path}/interaction/drag/include",
    "${file_dfs_service_path}/services/distributedfiledaemon/include/ipc",
    "//third_party/cJSON",
  ]

  sources = [
    "src/coordination.cpp",
    "src/coordination_device_manager.cpp",
    "src/coordination_event_handler.cpp",
    "src/coordination_event_manager.cpp",
    "src/coordination_hisysevent.cpp",
    "src/coordination_hotarea.cpp",
    "src/coordination_sm.cpp",
    "src/coordination_softbus_adapter.cpp",
    "src/coordination_state_free.cpp",
    "src/coordination_state_in.cpp",
    "src/coordination_state_out.cpp",
    "src/coordination_util.cpp",
    "src/device_profile_adapter.cpp",
    "src/distributed_input_adapter.cpp",
    "src/i_coordination_state.cpp",
  ]

  public_configs = [ ":coordination_public_config" ]

  defines = device_status_default_defines

  deps = [
    "${device_status_root_path}/intention/prototype:intention_prototype",
    "${device_status_root_path}/utils/ipc:devicestatus_ipc",
    "${device_status_utils_path}:devicestatus_util",
    "//third_party/openssl:libcrypto_shared",
  ]

  external_deps = [
    "access_token:libtoken_setproc",
    "cJSON:cjson",
    "c_utils:utils",
    "device_info_manager:distributed_device_profile_common",
    "device_info_manager:distributed_device_profile_sdk",
    "device_manager:devicemanagersdk",
    "dfs_service:distributed_file_daemon_kit_inner",
    "distributed_input:libdinput_sdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "input:libmmi-client",
    "ipc:ipc_single",
    "window_manager:libdm",
  ]

  subsystem_name = "${device_status_subsystem_name}"
  part_name = "${device_status_part_name}"
}
